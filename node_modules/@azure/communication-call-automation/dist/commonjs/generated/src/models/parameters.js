"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.recordingId = exports.startCallRecording = exports.unholdRequest = exports.holdRequest = exports.sendDtmfTonesRequest = exports.continuousDtmfRecognitionRequest = exports.recognizeRequest = exports.playRequest = exports.nextLink = exports.participantRawId = exports.cancelAddParticipantRequest = exports.muteParticipantsRequest = exports.removeParticipantRequest = exports.addParticipantRequest = exports.transferToParticipantRequest = exports.callConnectionId = exports.connectRequest = exports.rejectCallRequest = exports.redirectCallRequest = exports.answerCallRequest = exports.repeatabilityFirstSent = exports.repeatabilityRequestID = exports.apiVersion = exports.endpoint = exports.accept = exports.createCallRequest = exports.contentType = void 0;
const mappers_js_1 = require("../models/mappers.js");
exports.contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
exports.createCallRequest = {
    parameterPath: "createCallRequest",
    mapper: mappers_js_1.CreateCallRequest,
};
exports.accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
exports.endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2024-09-15",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.repeatabilityRequestID = {
    parameterPath: ["options", "repeatabilityRequestID"],
    mapper: {
        serializedName: "Repeatability-Request-ID",
        type: {
            name: "Uuid",
        },
    },
};
exports.repeatabilityFirstSent = {
    parameterPath: ["options", "repeatabilityFirstSent"],
    mapper: {
        serializedName: "Repeatability-First-Sent",
        type: {
            name: "DateTimeRfc1123",
        },
    },
};
exports.answerCallRequest = {
    parameterPath: "answerCallRequest",
    mapper: mappers_js_1.AnswerCallRequest,
};
exports.redirectCallRequest = {
    parameterPath: "redirectCallRequest",
    mapper: mappers_js_1.RedirectCallRequest,
};
exports.rejectCallRequest = {
    parameterPath: "rejectCallRequest",
    mapper: mappers_js_1.RejectCallRequest,
};
exports.connectRequest = {
    parameterPath: "connectRequest",
    mapper: mappers_js_1.ConnectRequest,
};
exports.callConnectionId = {
    parameterPath: "callConnectionId",
    mapper: {
        serializedName: "callConnectionId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.transferToParticipantRequest = {
    parameterPath: "transferToParticipantRequest",
    mapper: mappers_js_1.TransferToParticipantRequest,
};
exports.addParticipantRequest = {
    parameterPath: "addParticipantRequest",
    mapper: mappers_js_1.AddParticipantRequest,
};
exports.removeParticipantRequest = {
    parameterPath: "removeParticipantRequest",
    mapper: mappers_js_1.RemoveParticipantRequest,
};
exports.muteParticipantsRequest = {
    parameterPath: "muteParticipantsRequest",
    mapper: mappers_js_1.MuteParticipantsRequest,
};
exports.cancelAddParticipantRequest = {
    parameterPath: "cancelAddParticipantRequest",
    mapper: mappers_js_1.CancelAddParticipantRequest,
};
exports.participantRawId = {
    parameterPath: "participantRawId",
    mapper: {
        serializedName: "participantRawId",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
exports.playRequest = {
    parameterPath: "playRequest",
    mapper: mappers_js_1.PlayRequest,
};
exports.recognizeRequest = {
    parameterPath: "recognizeRequest",
    mapper: mappers_js_1.RecognizeRequest,
};
exports.continuousDtmfRecognitionRequest = {
    parameterPath: "continuousDtmfRecognitionRequest",
    mapper: mappers_js_1.ContinuousDtmfRecognitionRequest,
};
exports.sendDtmfTonesRequest = {
    parameterPath: "sendDtmfTonesRequest",
    mapper: mappers_js_1.SendDtmfTonesRequest,
};
exports.holdRequest = {
    parameterPath: "holdRequest",
    mapper: mappers_js_1.HoldRequest,
};
exports.unholdRequest = {
    parameterPath: "unholdRequest",
    mapper: mappers_js_1.UnholdRequest,
};
exports.startCallRecording = {
    parameterPath: "startCallRecording",
    mapper: mappers_js_1.StartCallRecordingRequest,
};
exports.recordingId = {
    parameterPath: "recordingId",
    mapper: {
        serializedName: "recordingId",
        required: true,
        type: {
            name: "String",
        },
    },
};
//# sourceMappingURL=parameters.js.map