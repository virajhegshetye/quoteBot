/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { CreateCallRequest as CreateCallRequestMapper, AnswerCallRequest as AnswerCallRequestMapper, RedirectCallRequest as RedirectCallRequestMapper, RejectCallRequest as RejectCallRequestMapper, ConnectRequest as ConnectRequestMapper, TransferToParticipantRequest as TransferToParticipantRequestMapper, AddParticipantRequest as AddParticipantRequestMapper, RemoveParticipantRequest as RemoveParticipantRequestMapper, MuteParticipantsRequest as MuteParticipantsRequestMapper, CancelAddParticipantRequest as CancelAddParticipantRequestMapper, PlayRequest as PlayRequestMapper, RecognizeRequest as RecognizeRequestMapper, ContinuousDtmfRecognitionRequest as ContinuousDtmfRecognitionRequestMapper, SendDtmfTonesRequest as SendDtmfTonesRequestMapper, HoldRequest as HoldRequestMapper, UnholdRequest as UnholdRequestMapper, StartCallRecordingRequest as StartCallRecordingRequestMapper, } from "../models/mappers.js";
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
export const createCallRequest = {
    parameterPath: "createCallRequest",
    mapper: CreateCallRequestMapper,
};
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
export const endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2024-09-15",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
export const repeatabilityRequestID = {
    parameterPath: ["options", "repeatabilityRequestID"],
    mapper: {
        serializedName: "Repeatability-Request-ID",
        type: {
            name: "Uuid",
        },
    },
};
export const repeatabilityFirstSent = {
    parameterPath: ["options", "repeatabilityFirstSent"],
    mapper: {
        serializedName: "Repeatability-First-Sent",
        type: {
            name: "DateTimeRfc1123",
        },
    },
};
export const answerCallRequest = {
    parameterPath: "answerCallRequest",
    mapper: AnswerCallRequestMapper,
};
export const redirectCallRequest = {
    parameterPath: "redirectCallRequest",
    mapper: RedirectCallRequestMapper,
};
export const rejectCallRequest = {
    parameterPath: "rejectCallRequest",
    mapper: RejectCallRequestMapper,
};
export const connectRequest = {
    parameterPath: "connectRequest",
    mapper: ConnectRequestMapper,
};
export const callConnectionId = {
    parameterPath: "callConnectionId",
    mapper: {
        serializedName: "callConnectionId",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const transferToParticipantRequest = {
    parameterPath: "transferToParticipantRequest",
    mapper: TransferToParticipantRequestMapper,
};
export const addParticipantRequest = {
    parameterPath: "addParticipantRequest",
    mapper: AddParticipantRequestMapper,
};
export const removeParticipantRequest = {
    parameterPath: "removeParticipantRequest",
    mapper: RemoveParticipantRequestMapper,
};
export const muteParticipantsRequest = {
    parameterPath: "muteParticipantsRequest",
    mapper: MuteParticipantsRequestMapper,
};
export const cancelAddParticipantRequest = {
    parameterPath: "cancelAddParticipantRequest",
    mapper: CancelAddParticipantRequestMapper,
};
export const participantRawId = {
    parameterPath: "participantRawId",
    mapper: {
        serializedName: "participantRawId",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String",
        },
    },
    skipEncoding: true,
};
export const playRequest = {
    parameterPath: "playRequest",
    mapper: PlayRequestMapper,
};
export const recognizeRequest = {
    parameterPath: "recognizeRequest",
    mapper: RecognizeRequestMapper,
};
export const continuousDtmfRecognitionRequest = {
    parameterPath: "continuousDtmfRecognitionRequest",
    mapper: ContinuousDtmfRecognitionRequestMapper,
};
export const sendDtmfTonesRequest = {
    parameterPath: "sendDtmfTonesRequest",
    mapper: SendDtmfTonesRequestMapper,
};
export const holdRequest = {
    parameterPath: "holdRequest",
    mapper: HoldRequestMapper,
};
export const unholdRequest = {
    parameterPath: "unholdRequest",
    mapper: UnholdRequestMapper,
};
export const startCallRecording = {
    parameterPath: "startCallRecording",
    mapper: StartCallRecordingRequestMapper,
};
export const recordingId = {
    parameterPath: "recordingId",
    mapper: {
        serializedName: "recordingId",
        required: true,
        type: {
            name: "String",
        },
    },
};
//# sourceMappingURL=parameters.js.map