{"version":3,"file":"responses.js","sourceRoot":"","sources":["../../../src/models/responses.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { CallConnection } from \"../callConnection.js\";\nimport { CallConnectionProperties, CallParticipant } from \"./models.js\";\nimport { RecordingState, RecordingKind } from \"../generated/src/index.js\";\n\n/**\n * The interface used as parent of [action]CallResult\n */\ninterface CallResult {\n  /*\n   * The callConnectionProperties\n   */\n  callConnectionProperties: CallConnectionProperties;\n\n  /*\n   * The callConnection\n   */\n  callConnection: CallConnection;\n}\n\n/**\n * CreateCall result\n */\nexport type CreateCallResult = CallResult;\n\n/**\n * AnswerCall result\n */\nexport type AnswerCallResult = CallResult;\n\n/** The response payload for getting participants of the call. */\nexport interface ListParticipantsResult {\n  /** List of the current participants in the call. */\n  values?: CallParticipant[];\n  /** Continue of the list of participants */\n  nextLink?: string;\n}\n\n/** The response payload for adding participants to the call. */\nexport interface AddParticipantResult {\n  /** invitation ID used to add the participant. */\n  invitationId?: string;\n  /** List of current participants in the call. */\n  participant?: CallParticipant;\n  /** The operation context provided by client. */\n  operationContext?: string;\n}\n\n/** The response payload for transferring the call. */\nexport interface TransferCallResult {\n  /** The operation context provided by client. */\n  operationContext?: string;\n}\n\n/** The response payload for removing participants from the call. */\nexport interface RemoveParticipantResult {\n  /** The operation context provided by client. */\n  operationContext?: string;\n}\n\n/** The response payload for muting participant from the call. */\nexport interface MuteParticipantResult {\n  /** The operation context provided by client. */\n  operationContext?: string;\n}\n\n/** The response payload for starting a call recording or getting call recording state. */\nexport interface RecordingStateResult {\n  recordingId: string;\n  recordingKind: RecordingKind;\n  recordingState: RecordingState;\n}\n\n/** The response payload for sending DTMF tones. */\nexport interface SendDtmfTonesResult {\n  /** The operation context provided by client. */\n  operationContext?: string;\n}\n\n/** The response payload for cancelling add participant request. */\nexport interface CancelAddParticipantOperationResult {\n  /** the invitation ID used to cancel the add participant request. */\n  invitationId?: string;\n  /** The operation context provided by client. */\n  operationContext?: string;\n}\n\n/**\n * Connect call result\n */\nexport type ConnectCallResult = CallResult;\n"]}